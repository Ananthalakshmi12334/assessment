# -*- coding: utf-8 -*-
"""LVADSUSR69-ANANTHALAKSHMI-IA2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ddOPOaQxygORwoCKAHT76Sclf_t6Dtpe

##q1
"""

import numpy as np
def RGB(rgb_image):
    height, width,= rgb_image.shape
    grayscale_image = np.zeros((height,width))
    for i in range(height):
        for j in range(width):
            R = rgb_image[i, j, 0]
            G = rgb_image[i, j, 1]
            B = rgb_image[i, j, 2]
            grayscale_value = 0.2989 * R + 0.5870 * G + 0.1140 * B
            grayscale_image[i, j] = grayscale_value

    return grayscale_image
rgb_image = np.array([[[255, 0, 0], [0, 255, 0], [0, 0, 255]],[[255, 255, 0], [255, 0, 255], [0, 255, 255]],[[127, 127, 127], [200, 200, 200], [50, 50, 50]]])
grayscale_image = RGB(rgb_image)
print(grayscale_image)

"""##q2

"""

import numpy as np
def normalize_data(data):
    means = np.mean(data, axis=0)
    std_devs = np.std(data, axis=0)
    normalized_data = (data - means) / std_devs
    return normalized_data
data = np.array([[165.5, 72, 40],[175.3, 50, 45],[170, 30, 30]])
normalized_data = normalize_data(data)
print("DAta is:",data)
print("Normalized data is:",normalized_data)

"""##Q3"""

sensor_data = np.array([[[255,0,0],[0,255,0],[0,0,255]],[[255,255,0],[255,0,255],[0,255,255]],[[127,127,127],[200,200,200],[50,50,50]]])
combined_output = np.stack([sensor_data[0].flatten(),sensor_data[1].flatten(),sensor_data[2].flatten()])
print(combined_output)

"""##Q4"""

import numpy as np
sports_data = np.array([[40, 200, 160], [50, 180, 50], [30, 170, 40]])
imp = sports_data[:, -1] - sports_data[:, 0]
print(imp)

"""#Q5"""

import numpy as np
scores = np.array([[60, 180, 200], [50, -1, 70], [25, 160, -1]])
avg = []
for marks in scores.T:
    average = np.mean(marks[marks != -1])
    avg.append(average)
print(avg)

"""#Q6"""

import numpy as np
climate = np.array([[10, 150, 200], [20, 160, 80], [25, 170, 50]])
calibrations = np.array([2.3,4.2,5.1])
def modify(climate, calibrations):
    adjusted_data = climate * calibrations.reshape(-1, 1)
    return adjusted_data
adj = modify(climate, calibrations)
print(adj)

"""#Q7"""

import pandas as pd
data = {
    'Name' : ['Alice','Bob','Charlie','David','Eve','Frank','Grace'],
    'Age'  : [25,30,35,40,45,50,55],
    'City' : ['New York','Los Angeles','Chicago','Houston','Pheonix','Miami','Boston'],
    'Department': ['HR','IT','Finance','Marketing','Sales','IT','HR']
}
df = pd.DataFrame(data)
df = df[['Name', 'City']][df['Age'] > 45]
df.set_index('Name', inplace=True)
print(df)

"""#Q8"""

import pandas as pd
data = {'Product':['Apple','Banana','Cherries','dates','Elderberries'],
        'Category':['fruit','fruit','fruit','fruit','fruit'],
        'Price':[1.20,0.50,3,2.5,4.0,1.5,2.0],
        'Promotion':['true','false','true','true','false','true','false']}
filtered_df = df[(df['Category'] == 'Fruit') & (df['Promotion'] == False) & (df['Price'] > df[df['Category'] == 'Fruit']['Price'].mean())]

print(filtered_df)

"""#Q10"""

data = {'Department':['Electronics','Electronics','Clothing','Clothing','Home goods'],
        'SalesPerson':['Alice','Bob','Charlie','David','Eve'],
        'Sales':[70000,50000,30000,40000,60000]}
df = pd.DataFrame(data)
avg_salesperson = df.groupby(['Department', 'SalesPerson'])['Sales'].mean().reset_index()
avg_department = avg_salesperson.groupby('Department')['Sales'].mean().reset_index()
ranked_departments = avg_department.sort_values(by='Sales', ascending=False)
print(ranked_departments)

"""#Q9

"""